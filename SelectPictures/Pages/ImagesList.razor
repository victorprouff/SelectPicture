@* @using SelectPictures.Data *@
@* *@
@* <div class="card-group card-group-scroll"> *@
@*     @foreach (var picture in _pictures) *@
@*     { *@
@*         <div class="card"> *@
@*             <img src="@picture.Source" class="card-img-top @(picture.IsDeleted ? "isDeleted" : "")" width="200" height="200" /> *@
@*             <div class="card-body"> *@
@*                 <h5 class="card-title">@picture.FileName</h5> *@
@*                 <button  *@
@*                     type="button" *@
@*                     class="btn btn-delete" *@
@*                     @onclick="args => DeletePicture(picture)">Click me</button> *@
@* *@
@*             </div> *@
@*         </div> *@
@*     } *@
@* </div> *@
@* *@
@* @code { *@
@* *@
@*     private Picture[] _pictures = {}; *@
@*     private string? _imageSource; *@
@*      *@
@*     protected override void OnInitialized() *@
@*     { *@
@*         var service = new ImagesService(); *@
@*         _pictures = service.GetPictures(); *@
@* *@
@*         foreach (var picture in _pictures) *@
@*         { *@
@*             picture.SetSource(GetImageBytes(picture.Url)); *@
@*         } *@
@*     } *@
@* *@
@*     private string GetImageBytes(string source) *@
@*     { *@
@*         var imageBytes  = File.ReadAllBytes(source); *@
@*         return $"data:image/png;base64,{Convert.ToBase64String(imageBytes)}"; *@
@*     } *@
@* *@
@*     private void DeletePicture(Picture picture) *@
@*     { *@
@*         picture.SetDelete(!picture.IsDeleted); *@
@*     } *@
@* *@
@* } *@
@* *@
